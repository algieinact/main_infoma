{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Residence API Tests",
		"description": "Collection of tests for the Residence API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"provider@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": ["{{base_url}}"],
							"path": ["api", "login"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Residences",
			"item": [
				{
					"name": "List Residences",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/residences?search=test&category=1&type=apartment&gender_type=male&city=Jakarta&min_price=1000000&max_price=5000000&sort=price_low",
							"host": ["{{base_url}}"],
							"path": ["api", "residences"],
							"query": [
								{
									"key": "search",
									"value": "test"
								},
								{
									"key": "category",
									"value": "1"
								},
								{
									"key": "type",
									"value": "apartment"
								},
								{
									"key": "gender_type",
									"value": "male"
								},
								{
									"key": "city",
									"value": "Jakarta"
								},
								{
									"key": "min_price",
									"value": "1000000"
								},
								{
									"key": "max_price",
									"value": "5000000"
								},
								{
									"key": "sort",
									"value": "price_low"
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal(\"success\");",
									"    pm.expect(jsonData.data).to.be.an(\"object\");",
									"    pm.expect(jsonData.data.data).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Residence Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/residences/1",
							"host": ["{{base_url}}"],
							"path": ["api", "residences", "1"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal(\"success\");",
									"    pm.expect(jsonData.data.residence).to.be.an(\"object\");",
									"    pm.expect(jsonData.data.similar_residences).to.be.an(\"array\");",
									"    pm.expect(jsonData.data.average_rating).to.be.a(\"number\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Residence",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Residence\",\n    \"description\": \"A test residence description\",\n    \"type\": \"apartment\",\n    \"price\": 2000000,\n    \"price_period\": \"month\",\n    \"address\": \"123 Test Street\",\n    \"city\": \"Jakarta\",\n    \"province\": \"DKI Jakarta\",\n    \"facilities\": [\"wifi\", \"ac\", \"parking\"],\n    \"rules\": [\"no smoking\", \"no pets\"],\n    \"total_rooms\": 10,\n    \"available_rooms\": 5,\n    \"gender_type\": \"male\",\n    \"category_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/residences",
							"host": ["{{base_url}}"],
							"path": ["api", "residences"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal(\"success\");",
									"    pm.expect(jsonData.message).to.equal(\"Residence created successfully\");",
									"    pm.expect(jsonData.data).to.be.an(\"object\");",
									"    pm.expect(jsonData.data.title).to.equal(\"Test Residence\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Update Residence",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Test Residence\",\n    \"description\": \"An updated test residence description\",\n    \"type\": \"apartment\",\n    \"price\": 2500000,\n    \"price_period\": \"month\",\n    \"address\": \"123 Test Street\",\n    \"city\": \"Jakarta\",\n    \"province\": \"DKI Jakarta\",\n    \"facilities\": [\"wifi\", \"ac\", \"parking\", \"gym\"],\n    \"rules\": [\"no smoking\", \"no pets\", \"quiet hours\"],\n    \"total_rooms\": 10,\n    \"available_rooms\": 4,\n    \"gender_type\": \"male\",\n    \"category_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/residences/1",
							"host": ["{{base_url}}"],
							"path": ["api", "residences", "1"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal(\"success\");",
									"    pm.expect(jsonData.message).to.equal(\"Residence updated successfully\");",
									"    pm.expect(jsonData.data).to.be.an(\"object\");",
									"    pm.expect(jsonData.data.title).to.equal(\"Updated Test Residence\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Delete Residence",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/residences/1",
							"host": ["{{base_url}}"],
							"path": ["api", "residences", "1"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal(\"success\");",
									"    pm.expect(jsonData.message).to.equal(\"Residence deleted successfully\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Search Residences",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/residences/search?q=test",
							"host": ["{{base_url}}"],
							"path": ["api", "residences", "search"],
							"query": [
								{
									"key": "q",
									"value": "test"
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal(\"success\");",
									"    pm.expect(jsonData.data).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Cities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/residences/cities",
							"host": ["{{base_url}}"],
							"path": ["api", "residences", "cities"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal(\"success\");",
									"    pm.expect(jsonData.data).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
} 